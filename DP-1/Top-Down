/*Time Complexity: O(n)
Space Complexity: O(n)
*/
class Solution {
    public int fib(int n) {
        int[] dp=new int[n+1];
        Arrays.fill(dp,-1);
        int ans=fibdp(dp,n);
        return ans;
    }

    public int fibdp(int[] dp,int n){
        if(n<=1){
            return n;
        } //base case for recursion

        if(dp[n]!=-1){
            return dp[n];
        } //if already calculated then return the value

        dp[n]=fibdp(dp,n-1)+fibdp(dp,n-2);
        return dp[n]; //if not calculated then calculate and store in dp array
    }
}