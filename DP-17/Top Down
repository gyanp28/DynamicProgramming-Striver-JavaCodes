class Solution {
    public int perfectSum(int arr[], int n, int target) {
        int MOD = (int) (Math.pow(10, 9)) + 7;
        int[][] dp = new int[arr.length + 1][target + 1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        return help(0, target, arr, dp, MOD);
    }

    public int help(int i, int target, int arr[], int[][] dp, int MOD) {
        if (i == arr.length) {
            if (target == 0) {
                return 1;
            }
            return 0;
        }

        if (dp[i][target] != -1) {
            return dp[i][target];
        }

        // Do all stuffs
        int pick = 0;
        if (arr[i] <= target) {
            pick = help(i + 1, target - arr[i], arr, dp, MOD);
        }
        int nonpick = help(i + 1, target, arr, dp, MOD);
        int ans = (pick + nonpick) % MOD;
        return dp[i][target] = ans;
    }
}