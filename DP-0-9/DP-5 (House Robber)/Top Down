/*Time Complexity: O(n) 
  Space Complexity: O(n)
*/

class Solution {
    public int rob(int[] arr) {
        int n=arr.length;
        int[] dp=new int[n];
        Arrays.fill(dp,-1);
        return help(n-1,arr,dp); 
    }

    public int help(int i,int[] arr,int[] dp){
        if(i==0){
            return arr[i];
        }

        if(i<0){
            return 0;
        }

        if(dp[i]!=-1){
            return dp[i];
        }
        
        int pick=arr[i]+help(i-2,arr,dp);
        int notpick=0+help(i-1,arr,dp);
        dp[i]=Math.max(pick,notpick);
        return dp[i];
    }
}