class Solution {
    public int minPathSum(int[][] grid) {
        int [][] dp=new int[grid.length][grid[0].length];
        
        return help(grid,dp);
    }

    
    public int help(int [][] grid,int [][] dp){
        int m=grid.length;
        int n=grid[0].length;
        dp[m-1][n-1]=grid[m-1][n-1];
        for(int i=m-1;i>=0;i--){
            for(int j=n-1;j>=0;j--){
                if (i == m-1 && j == n-1) {
                    continue;
                }
                int bottom=Integer.MAX_VALUE;
                if(i<m-1){
                    bottom=dp[i+1][j]+grid[i][j];
                }

                int right=Integer.MAX_VALUE;
                if(j<n-1){
                    right=dp[i][j+1] + grid[i][j];
                }

                dp[i][j]=Math.min(right,bottom);
            }
        }
        return dp[0][0];
    }

}