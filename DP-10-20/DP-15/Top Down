
class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
        }
        if(sum%2!=0){
            return false;
        }
        int dp[][]=new int[201][(sum/2)+1];
        for(int row[]:dp){
            Arrays.fill(row,-1);
        }
        return help(0,sum/2,nums,dp);
    }

    public static boolean help(int i,int k,int[] arr,int[][]dp){
        if(i==arr.length){
            if(k==0){
                dp[i][k]=1;
                return true;
            }
            dp[i][k]=0;
            return false;
        }

        if(dp[i][k]!=-1){
            if(dp[i][k]==1){
                return true;
            }
            else{
                return false;
            }
        }
        boolean a=false;
        if(arr[i]<=k){
            a=help(i+1,k-arr[i],arr,dp);
        }
        boolean b=help(i+1,k,arr,dp);
        boolean ans=false;
        if(a==false && b==false){
            dp[i][k]=0;
        }
        else{
            dp[i][k]=1;
        }
        return (a||b);
    }
}